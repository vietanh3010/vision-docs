variables:
  REGISTRY: https://registry.fci.vn/
  IMAGE_NAME_FE: registry.fci.vn/fptai-vision/docs/docusaurus-v2

  GIT_OPS_REPO: https://$OPS_ACCESS_NAME:$OPS_ACCESS_TOKEN@gitlab.fci.vn/vision-ops/reader-ops.git
  OPS_REPO_PATH: reader-ops/docs
  GIT_OPS_USER_EMAIL: haidx7@fpt.com.vn
  GIT_OPS_USER_NAME: ReaderCD

stages:
  - build
  - deploy

.build-frontend-template: &build-frontend
  stage: build
  tags:
    - builder
  before_script:
    - docker login -u $HARBOR_USER -p $HARBOR_PASSWORD registry.fci.vn
  script:
    - echo "RUNNING BUILD for commit" $CI_COMMIT_MESSAGE "with tag" $IMAGE_TAG
    - export BUILD_DATE=$(date '+%d-%m-%Y')
    - echo "BUID_DATE=$BUILD_DATE"
    - docker build -t $IMAGE_NAME_FE:$IMAGE_TAG -f $FE_DOCKERFILE
      --build-arg ARG_BRANCH=$BRANCH
      --build-arg ARG_IMG_TAG=$IMAGE_TAG
      --build-arg ARG_ENV=$ARG_ENV
      --build-arg ARG_BUILD_DATE=$BUILD_DATE
      .
    - docker push $IMAGE_NAME_FE:$IMAGE_TAG

build-frontend:
  <<: *build-frontend
  variables:
    FE_DOCKERFILE : Dockerfile
    ARG_ENV: PRODUCTION
    IMAGE_TAG: $CI_COMMIT_TAG
  only:
    - /^\d+\.\d+\.\d+$/

.deploy-frontend-template: &deploy
  stage: deploy
  tags:
    - reader-dev
  image: alpine/git:v2.34.2
  before_script:
    - apk add yq --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community  # .yaml cli editor
    - git clone $GIT_OPS_REPO
    - git config --global user.email $GIT_OPS_USER_EMAIL
    - git config --global user.name $GIT_OPS_USER_NAME
  script:
    - cd $OPS_REPO_PATH
    - yq -i eval '((strenv(COMPONENT) | split(".") | .[]) as $i ireduce (. ; .[$i])) = env(IMAGE_TAG)' $HELM_VALUES_FILE
    - git diff
    - git add .
    - git commit -m "Deploy ui frontend with image $IMAGE_NAME_FE:$IMAGE_TAG"
    - git push --repo $GIT_OPS_REPO

deploy-prod:
  <<: *deploy
  variables:
    IMAGE_TAG: $CI_COMMIT_TAG
    COMPONENT: image.tag
    HELM_VALUES_FILE: values.yaml
  only:
    - /^\d+\.\d+\.\d+$/
